*lcpeek.jax*	VimScript変数の値覗き見ツール
==============================================================================
暫定版ヘルプドキュメント
==============================================================================
CONTENTS						*lcpeek_contents*

==============================================================================
概要							*lcpeek_introduction*
 ・Vim Script中の変数の値を覗き見するデバッグツール。
 ・スクリプト中に、 >
	 :call PeekInput(変数名, 変数)
<	を記述すると、その時点の値が記録される。 >
	:call PeekEcho()
<	すると変数名と、変数の値が表示される。
 ・また、|g:peekdir|以下に、変数の値の変動を記録したファイルが作成される。

 ・こんな七面倒くさいツール使わなくても、いいデバッガーがあるよという人は
	 ぜひ私に教えてください。

==============================================================================
グローバル変数						*lcpeek-variables*

g:peekdir						*g:peekdir*
	（文字列  規定値： '~/'）
	このディレクトリ以下に.lcpeek/ディレクトリが作成される。
	.lcpeek/ディレクトリ以下には各変数名をファイル名にしたファイルが作成
	される。
	詳細は|PeekInput()|参照。


g:{varname}
	（リスト  規定値： []）
	|PeekInput()|を呼ぶことで作成される。
	末尾ににその時点の変数名{varname}の変数の値{varval}が収められていく。

==============================================================================
グローバル関数						*lcpeek-functions*

PeekInput({varname}, {varval}, [{num}])			*PeekInput()*
	変数名{varname}の値{varval}を記録する。
	|g:peekdir|に変数名をファイル名にしたファイルが作成される。
	変数名がファイル名に使えない名前を含むときは、ファイル名に使える
	名前にリネームされる。
	ファイルの中身は一行が次のフォーマットである。

		番号{num}:		値{varval}

	同じ変数名の変数が記録される度に、後に行が追加されていく。
	これにより、ある変数の値の変化を追うことが出来る。
	番号{num}が省略された場合、番号はVimが起動してからPeekInput()が
	呼ばれた回数の合計値になる。（例えば5回目に呼ばれたなら番号は'5'）
	番号を辿ることにより、変数が記録された順番が分かる。


PeekEcho()						*PeekEcho()*
	それぞれの変数名についての、最後に記録された値を表示する。
	すなわち、それぞれの変数について、g:{varname}[-1]を表示する。 >
		noremap <Leader>k :call PeekEcho()<CR>
<	のようにマッピングしておくといいかも。


PeekReset()						*PeekReset()*
	|g:peekdir|にある全てのファイルを削除し、PeekInput()が呼ばれた回数を
	記録している変数に0を代入する。
	つまり記録を全て破棄する。
	Vimが初めに起動したときにも呼ばれる。

==============================================================================
使い方の例:						*lcpeek-usage*

	次のようなスクリプトを例にする。 >
		:let s:list = []
		:let s:i = 0
		:let s:j = 2

		:function! Test()
		:  let s:i +=1
		:  let s:j *=2
		:  call add(s:list, s:j)
		:  let listlen = len(s:list)

		:  call PeekInput('s:list', s:list, s:i)
		:  call PeekInput('listlen', listlen, s:i)
		:endfunction


<	ここで、Test()を5回呼ぶと‥‥
	.lcpeek/s_listファイルの中身 >
		1:		[4]
		2:		[4, 6]
		3:		[4, 6, 8]
		4:		[4, 6, 8, 10]
		5:		[4, 6, 8, 10, 12]
<	.lcpeek/listlenファイルの中身 >
		1:		1
		2:		2
		3:		3
		4:		4
		5:		5
<
	また、:call PeekEcho()すると以下が表示される。 >
		LcPeek:
		s_list =5:              [4, 6, 8, 10, 12]
		listlen =5:             5
<
==============================================================================
vim:tw=78:ts=8:ft=help:norl:noet:fen:fdl=0:nolist:
