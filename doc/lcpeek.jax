*lcpeek.jax*	VimScript変数の値覗き見ツール
==============================================================================
暫定版ヘルプドキュメント
==============================================================================
CONTENTS						*lcpeek_contents*

==============================================================================
概要							*lcpeek_introduction*
 ・Vim Script中の変数の値を覗き見するデバッグツール。
 ・スクリプト中に、 >
	 :call PeekInput(名前, 変数)
<	を記述すると、その時点の値が記録される。 >
	:call PeekEcho()
<	すると名前と、変数の値が表示される。
 ・また、|g:peekdir|以下に、変数の値の変動を記録したファイルが作成される。

==============================================================================
グローバル変数						*lcpeek-variables*

g:peekdisable						*g:peekdisable*
	（数値  規定値: 0）
	1なら|PeekInput()|が呼ばれても記録も何も行わない。

g:peekdir						*g:peekdir*
	（文字列  規定値: '~/'）
	このディレクトリ以下に.lcpeek/ディレクトリが作成される。
	.lcpeek/ディレクトリ以下には各名前{name}をファイル名にしたファイル
	が作成される。
	また、peekmasterという、全ての{name}ファイルに書かれた記録を集めた
	特別なファイルも作られる。
	詳細は|PeekInput()|参照。


g:peekmsg						*g:peekmsg*
	（数値  規定値: 0）
	1なら|PeekInput()|したとき現在の記録した変数の値をechomsgする。
	後に:messagesすることで変数の変化を追うのに使える。


g:{name}
	（リスト  規定値: []）
	|PeekInput()|を呼ぶことで作成される。
	末尾ににその時点の、名前{name}の変数の値{varval}が収められていく。

g:peekmaster
	（リスト  規定値: []）
	変更の様子を順番に、全て収めたリスト。
	g:{name}とほぼ同じ内容を一カ所に集めている。

==============================================================================
グローバル関数						*lcpeek-functions*

PeekInput({name}, {varval})				*PeekInput()*

		{name}		文字列
		{varval}	何でも

	名前{name}を付けて変数の値{varval}を記録する。
	|g:peekdir|に名前{name}をファイル名にしたファイルが作成される。
	名前がファイル名に使えない文字を含むときは、全てファイル名に使える
	文字(_)にリネームされる。
	名前{name}を空白文字''にするとstacktrace(どこで呼ばれたか)
	を元にした名前が自動的に付加される。
	ファイルの中身は一行が次のフォーマットである。

		実行順番:    値{varval}    stacktrace

	同じ名前{name}の変数が記録される度に、後に行が追加されていく。
	これにより、ある変数の値の変化を追うことが出来る。

	名前ごとでなく、全ての記録を閲覧したいときにはpeekmasterというファイル
	がある。lcpeekが記録した処理が全て書かれたものである。


PeekEcho()						*PeekEcho()*
	それぞれの名前{name}についての、最後に記録された値{varval}を表示
	する。すなわち、それぞれの名前について、g:{name}[-1]を表示する。 >
		noremap <Leader>k :call PeekEcho()<CR>
<	のようにマッピングしておくといいかも。


PeekReset()						*PeekReset()*
	|g:peekdir|に現在日時から命名したディレクトリを作成し、
	|g:peekdir|にある全てのファイルをその中に移動させる(アーカイブする)。
	PeekInput()が呼ばれた回数を記録している変数に0を代入する。
	つまりファイル以外の記録を全て破棄する。
	Vimが起動してから最初に|PeekInput()|が呼ばれたときにも呼ばれる。

==============================================================================
使い方の例:						*lcpeek-usage*

	次のようなスクリプトを例にする。 >
		:let s:list = []
		:let s:i = 0
		:let s:j = 2

		:function! Test()
		:  let s:i +=1
		:  let s:j +=2
		:  call add(s:list, s:j)
		:  let listlen = len(s:list)

		:  call PeekInput('s:list', s:list)
		:  call PeekInput('listlen', listlen)
		:endfunction
<	記録したい変数についてPeekInput()を仕込む。
	ここで、Test()を5回呼ぶと‥‥

	.lcpeek/s_listファイルの中身 >
		1:		[4]			function Test
		3:		[4, 6]			function Test
		5:		[4, 6, 8]		function Test
		7:		[4, 6, 8, 10]		function Test
		9:		[4, 6, 8, 10, 12]	function Test

<	.lcpeek/listlenファイルの中身 >
		2:		1		function Test
		4:		2		function Test
		6:		3		function Test
		8:		4		function Test
		10:		5		function Test
<
	また、:call PeekEcho()すると以下が表示される。 >
		LcPeek:
		s_list =9:	[4, 6, 8, 10, 12]	function Test
		listlen =10:			5	function Test
<
==============================================================================
vim:tw=78:ts=8:ft=help:norl:noet:fen:fdl=0:nolist:
